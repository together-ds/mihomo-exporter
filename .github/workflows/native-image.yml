name: Native-Image

on:
  # push:
  #   branches:
  #     - main
  # pull_request:
  #   branches:
  #     - main
  workflow_dispatch:
    inputs:
      version:
        description: 'Enter the version number'
        required: true

jobs:
  build:
    name: Build native image
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [linux/amd64, linux/arm64]
    steps:
      - name: Prepare
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV

      - uses: actions/checkout@v3

      - name: GitHub Action for GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '21'
          distribution: 'graalvm' # See 'Options' for all available distributions
          cache: 'maven'


      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build with Maven
        run: |
          ./mvnw install -Dnative -DskipTests=true \
          -Dquarkus.native.container-build=true \
          -Dquarkus.native.container-runtime=docker \
          -Dquarkus.container-image.build=true \
          -Dquarkus.docker.buildx.platform=${{ matrix.platform }} \
          -Dquarkus.docker.dockerfile-native-path=src/main/docker/Dockerfile.native-micro \
          -Dquarkus.container-image.group=togetherds \
          -Dquarkus.container-image.name=mihomo-exporter \
          -Dquarkus.container-image.tag=${{ github.event.inputs.version }}-${{ env.PLATFORM_PAIR }} \
          -Dquarkus.container-image.additional-tags=latest-${{ env.PLATFORM_PAIR }} \
          -Dquarkus.container-image.push=true \
          -Dquarkus.container-image.username=${{ secrets.DOCKERHUB_USERNAME }} \
          -Dquarkus.container-image.password=${{ secrets.DOCKERHUB_TOKEN }}


  create-manifest:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Create and push manifest
        run: |
          docker manifest create togetherds/mihomo-exporter:${{ github.event.inputs.version }} \
            togetherds/mihomo-exporter:${{ github.event.inputs.version }}-linux-amd64 \
            togetherds/mihomo-exporter:${{ github.event.inputs.version }}-linux-arm64
          
          docker manifest create togetherds/mihomo-exporter:latest \
            togetherds/mihomo-exporter:latest-linux-amd64 \
            togetherds/mihomo-exporter:latest-linux-arm64
          
          docker manifest push togetherds/mihomo-exporter:${{ github.event.inputs.version }}
          docker manifest push togetherds/mihomo-exporter:latest
